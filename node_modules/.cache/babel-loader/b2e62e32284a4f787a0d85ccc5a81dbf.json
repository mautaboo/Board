{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mauri\\\\OneDrive\\\\Documentos\\\\TT\\\\Desarrollo\\\\eboard\\\\src\\\\Components\\\\Pizarron\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport { useOnDraw } from './Hooks';\nimport Cursor from '../Images/Cursor.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst $btnDescargar = document.querySelector(\"#btnDescargar\");\n$btnDescargar.addEventListener(\"click\", () => {\n  // Crear un elemento <a>\n  let enlace = document.createElement('a');\n  // El título\n  enlace.download = \"Canvas como imagen.png\";\n  // Convertir la imagen a Base64 y ponerlo en el enlace\n  enlace.href = Canvas.toDataURL();\n  // Hacer click en él\n  enlace.click();\n});\nconst Canvas = _ref => {\n  _s();\n  let {\n    width,\n    height,\n    colorp\n  } = _ref;\n  const {\n    setCanvasRef,\n    onCanvasMouseDown\n  } = useOnDraw(onDraw);\n  function onDraw(ctx, point, prevPoint) {\n    drawLine(prevPoint, point, ctx, colorp, 6);\n  }\n  function drawLine(start, end, ctx, color, width) {\n    var _start;\n    start = (_start = start) !== null && _start !== void 0 ? _start : end;\n    ctx.beginPath();\n    ctx.lineWidth = width;\n    ctx.strokeStyle = color;\n    ctx.moveTo(start.x, start.y);\n    ctx.lineTo(end.x, end.y);\n    ctx.stroke();\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.arc(start.x, start.y, 2, 0, 2 * Math.PI);\n    ctx.fill();\n  }\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    width: width,\n    height: height,\n    onMouseDown: onCanvasMouseDown,\n    style: canvasStyle,\n    ref: setCanvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(Canvas, \"ZkKPhkglNhce9tYR9AjV3i0DCcE=\", false, function () {\n  return [useOnDraw];\n});\n_c = Canvas;\nexport default Canvas;\nconst canvasStyle = {\n  border: \"1px solid white\",\n  cursor: \"url(Cursor.png)\"\n};\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["useOnDraw","Cursor","$btnDescargar","document","querySelector","addEventListener","enlace","createElement","download","href","Canvas","toDataURL","click","width","height","colorp","setCanvasRef","onCanvasMouseDown","onDraw","ctx","point","prevPoint","drawLine","start","end","color","beginPath","lineWidth","strokeStyle","moveTo","x","y","lineTo","stroke","fillStyle","arc","Math","PI","fill","canvasStyle","border","cursor"],"sources":["C:/Users/mauri/OneDrive/Documentos/TT/Desarrollo/eboard/src/Components/Pizarron/Canvas.js"],"sourcesContent":["import {useOnDraw} from './Hooks';\r\nimport Cursor from '../Images/Cursor.png'\r\n\r\nconst $btnDescargar = document.querySelector(\"#btnDescargar\");\r\n\r\n$btnDescargar.addEventListener(\"click\", () => {\r\n    // Crear un elemento <a>\r\n    let enlace = document.createElement('a');\r\n    // El título\r\n    enlace.download = \"Canvas como imagen.png\";\r\n    // Convertir la imagen a Base64 y ponerlo en el enlace\r\n    enlace.href = Canvas.toDataURL();\r\n    // Hacer click en él\r\n    enlace.click();\r\n});\r\n\r\nconst Canvas = ({\r\n    width,\r\n    height,\r\n    colorp\r\n}) => {\r\n\r\n    const {\r\n        setCanvasRef,\r\n        onCanvasMouseDown\r\n    } = useOnDraw(onDraw);\r\n\r\n    function onDraw(ctx, point, prevPoint) {\r\n        drawLine(prevPoint, point, ctx, colorp, 6);\r\n    }\r\n\r\n    function drawLine(\r\n        start,\r\n        end,\r\n        ctx,\r\n        color,\r\n        width\r\n    ) {\r\n        start = start ?? end;\r\n        ctx.beginPath();\r\n        ctx.lineWidth = width;\r\n        ctx.strokeStyle = color;\r\n        ctx.moveTo(start.x, start.y);\r\n        ctx.lineTo(end.x, end.y);\r\n        ctx.stroke();\r\n\r\n        ctx.fillStyle = color;\r\n        ctx.beginPath();\r\n        ctx.arc(start.x, start.y, 2, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n\r\n    }\r\n\r\n    return(\r\n        <canvas\r\n            width={width}\r\n            height={height}\r\n            onMouseDown={onCanvasMouseDown}\r\n            style={canvasStyle}\r\n            ref={setCanvasRef}\r\n        />\r\n    );\r\n\r\n}\r\n\r\nexport default Canvas;\r\n\r\nconst canvasStyle = {\r\n    border: \"1px solid white\",\r\n    cursor: \"url(Cursor.png)\",\r\n}"],"mappings":";;AAAA,SAAQA,SAAS,QAAO,SAAS;AACjC,OAAOC,MAAM,MAAM,sBAAsB;AAAA;AAEzC,MAAMC,aAAa,GAAGC,QAAQ,CAACC,aAAa,CAAC,eAAe,CAAC;AAE7DF,aAAa,CAACG,gBAAgB,CAAC,OAAO,EAAE,MAAM;EAC1C;EACA,IAAIC,MAAM,GAAGH,QAAQ,CAACI,aAAa,CAAC,GAAG,CAAC;EACxC;EACAD,MAAM,CAACE,QAAQ,GAAG,wBAAwB;EAC1C;EACAF,MAAM,CAACG,IAAI,GAAGC,MAAM,CAACC,SAAS,EAAE;EAChC;EACAL,MAAM,CAACM,KAAK,EAAE;AAClB,CAAC,CAAC;AAEF,MAAMF,MAAM,GAAG,QAIT;EAAA;EAAA,IAJU;IACZG,KAAK;IACLC,MAAM;IACNC;EACJ,CAAC;EAEG,MAAM;IACFC,YAAY;IACZC;EACJ,CAAC,GAAGjB,SAAS,CAACkB,MAAM,CAAC;EAErB,SAASA,MAAM,CAACC,GAAG,EAAEC,KAAK,EAAEC,SAAS,EAAE;IACnCC,QAAQ,CAACD,SAAS,EAAED,KAAK,EAAED,GAAG,EAAEJ,MAAM,EAAE,CAAC,CAAC;EAC9C;EAEA,SAASO,QAAQ,CACbC,KAAK,EACLC,GAAG,EACHL,GAAG,EACHM,KAAK,EACLZ,KAAK,EACP;IAAA;IACEU,KAAK,aAAGA,KAAK,2CAAIC,GAAG;IACpBL,GAAG,CAACO,SAAS,EAAE;IACfP,GAAG,CAACQ,SAAS,GAAGd,KAAK;IACrBM,GAAG,CAACS,WAAW,GAAGH,KAAK;IACvBN,GAAG,CAACU,MAAM,CAACN,KAAK,CAACO,CAAC,EAAEP,KAAK,CAACQ,CAAC,CAAC;IAC5BZ,GAAG,CAACa,MAAM,CAACR,GAAG,CAACM,CAAC,EAAEN,GAAG,CAACO,CAAC,CAAC;IACxBZ,GAAG,CAACc,MAAM,EAAE;IAEZd,GAAG,CAACe,SAAS,GAAGT,KAAK;IACrBN,GAAG,CAACO,SAAS,EAAE;IACfP,GAAG,CAACgB,GAAG,CAACZ,KAAK,CAACO,CAAC,EAAEP,KAAK,CAACQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGK,IAAI,CAACC,EAAE,CAAC;IAC5ClB,GAAG,CAACmB,IAAI,EAAE;EAEd;EAEA,oBACI;IACI,KAAK,EAAEzB,KAAM;IACb,MAAM,EAAEC,MAAO;IACf,WAAW,EAAEG,iBAAkB;IAC/B,KAAK,EAAEsB,WAAY;IACnB,GAAG,EAAEvB;EAAa;IAAA;IAAA;IAAA;EAAA,QACpB;AAGV,CAAC;AAAA,GA/CKN,MAAM;EAAA,QASJV,SAAS;AAAA;AAAA,KATXU,MAAM;AAiDZ,eAAeA,MAAM;AAErB,MAAM6B,WAAW,GAAG;EAChBC,MAAM,EAAE,iBAAiB;EACzBC,MAAM,EAAE;AACZ,CAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}